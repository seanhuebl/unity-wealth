// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0
// source: users.sql

package database

import (
	"context"

	"github.com/google/uuid"
)

const createUser = `-- name: CreateUser :exec
INSERT INTO users (id, email, hashed_password)
VALUES ($1, $2, $3)
`

type CreateUserParams struct {
	ID             uuid.UUID
	Email          string
	HashedPassword string
}

func (q *Queries) CreateUser(ctx context.Context, arg CreateUserParams) error {
	_, err := q.db.ExecContext(ctx, createUser, arg.ID, arg.Email, arg.HashedPassword)
	return err
}

const getUserByEmail = `-- name: GetUserByEmail :one
SELECT id,
    hashed_password
FROM users
WHERE email = $1
`

type GetUserByEmailRow struct {
	ID             uuid.UUID
	HashedPassword string
}

func (q *Queries) GetUserByEmail(ctx context.Context, email string) (GetUserByEmailRow, error) {
	row := q.db.QueryRowContext(ctx, getUserByEmail, email)
	var i GetUserByEmailRow
	err := row.Scan(&i.ID, &i.HashedPassword)
	return i, err
}
